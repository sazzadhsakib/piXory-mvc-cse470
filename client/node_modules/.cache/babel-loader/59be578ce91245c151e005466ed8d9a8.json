{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"F:\\\\MERN-Stack-Build-a-social-media-app\\\\client\\\\src\\\\components\\\\alert\\\\Alert.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { GLOBALTYPES } from '../../redux/actions/globalTypes';\nimport Loading from './Loading';\nimport Toast from './Toast';\n\nconst Notify = () => {\n  _s();\n\n  const {\n    alert\n  } = useSelector(state => state);\n  const dispatch = useDispatch();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [alert.loading && /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 31\n    }, this), alert.error && /*#__PURE__*/_jsxDEV(Toast, {\n      msg: {\n        title: 'Error',\n        body: alert.error\n      },\n      handleShow: () => dispatch({\n        type: GLOBALTYPES.ALERT,\n        payload: {}\n      }),\n      bgColor: \"bg-danger\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 17\n    }, this), alert.success && /*#__PURE__*/_jsxDEV(Toast, {\n      msg: {\n        title: 'Success',\n        body: alert.success\n      },\n      handleShow: () => dispatch({\n        type: GLOBALTYPES.ALERT,\n        payload: {}\n      }),\n      bgColor: \"bg-success\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Notify, \"nkVCJCUp54Uw4abul0ck9OkzP00=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = Notify;\nexport default Notify;\n\nvar _c;\n\n$RefreshReg$(_c, \"Notify\");","map":{"version":3,"sources":["F:/MERN-Stack-Build-a-social-media-app/client/src/components/alert/Alert.js"],"names":["React","useSelector","useDispatch","GLOBALTYPES","Loading","Toast","Notify","alert","state","dispatch","loading","error","title","body","type","ALERT","payload","success"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,WAAT,QAA4B,iCAA5B;AAEA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,KAAP,MAAkB,SAAlB;;AAEA,MAAMC,MAAM,GAAG,MAAM;AAAA;;AACjB,QAAM;AAAEC,IAAAA;AAAF,MAAYN,WAAW,CAACO,KAAK,IAAIA,KAAV,CAA7B;AACA,QAAMC,QAAQ,GAAGP,WAAW,EAA5B;AAEA,sBACI;AAAA,eACKK,KAAK,CAACG,OAAN,iBAAiB,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YADtB,EAIQH,KAAK,CAACI,KAAN,iBACA,QAAC,KAAD;AAAO,MAAA,GAAG,EAAE;AAACC,QAAAA,KAAK,EAAE,OAAR;AAAiBC,QAAAA,IAAI,EAAEN,KAAK,CAACI;AAA7B,OAAZ;AACA,MAAA,UAAU,EAAE,MAAMF,QAAQ,CAAC;AAACK,QAAAA,IAAI,EAAEX,WAAW,CAACY,KAAnB;AAA0BC,QAAAA,OAAO,EAAE;AAAnC,OAAD,CAD1B;AAEA,MAAA,OAAO,EAAC;AAFR;AAAA;AAAA;AAAA;AAAA,YALR,EAWQT,KAAK,CAACU,OAAN,iBACA,QAAC,KAAD;AAAO,MAAA,GAAG,EAAE;AAACL,QAAAA,KAAK,EAAE,SAAR;AAAmBC,QAAAA,IAAI,EAAEN,KAAK,CAACU;AAA/B,OAAZ;AACA,MAAA,UAAU,EAAE,MAAMR,QAAQ,CAAC;AAACK,QAAAA,IAAI,EAAEX,WAAW,CAACY,KAAnB;AAA0BC,QAAAA,OAAO,EAAE;AAAnC,OAAD,CAD1B;AAEA,MAAA,OAAO,EAAC;AAFR;AAAA;AAAA;AAAA;AAAA,YAZR;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAmBH,CAvBD;;GAAMV,M;UACgBL,W,EACDC,W;;;KAFfI,M;AAyBN,eAAeA,MAAf","sourcesContent":["import React from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { GLOBALTYPES } from '../../redux/actions/globalTypes'\r\n\r\nimport Loading from './Loading'\r\nimport Toast from './Toast'\r\n\r\nconst Notify = () => {\r\n    const { alert } = useSelector(state => state)\r\n    const dispatch = useDispatch()\r\n\r\n    return (\r\n        <div>\r\n            {alert.loading && <Loading />}\r\n\r\n            {\r\n                alert.error && \r\n                <Toast msg={{title: 'Error', body: alert.error}}\r\n                handleShow={() => dispatch({type: GLOBALTYPES.ALERT, payload: {}})} \r\n                bgColor=\"bg-danger\" />\r\n            }\r\n\r\n            {\r\n                alert.success && \r\n                <Toast msg={{title: 'Success', body: alert.success}} \r\n                handleShow={() => dispatch({type: GLOBALTYPES.ALERT, payload: {}})}\r\n                bgColor=\"bg-success\" />\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Notify\r\n"]},"metadata":{},"sourceType":"module"}