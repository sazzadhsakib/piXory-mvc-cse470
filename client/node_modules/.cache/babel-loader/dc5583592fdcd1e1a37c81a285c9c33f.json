{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"F:\\\\MERN-Stack-Build-a-social-media-app\\\\client\\\\src\\\\components\\\\StatusModal.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { GLOBALTYPES } from '../redux/actions/globalTypes';\nimport { createPost, updatePost } from '../redux/actions/postAction';\nimport Icons from './Icons';\nimport { imageShow, videoShow } from '../utils/mediaShow';\n\nconst StatusModal = () => {\n  _s();\n\n  const {\n    auth,\n    theme,\n    status,\n    socket\n  } = useSelector(state => state);\n  const dispatch = useDispatch();\n  const [content, setContent] = useState('');\n  const [images, setImages] = useState([]);\n  const [stream, setStream] = useState(false);\n  const videoRef = useRef();\n  const refCanvas = useRef();\n  const [tracks, setTracks] = useState('');\n\n  const handleChangeImages = e => {\n    const files = [...e.target.files];\n    let err = \"\";\n    let newImages = [];\n    files.forEach(file => {\n      if (!file) return err = \"File does not exist.\";\n\n      if (file.size > 1024 * 1024 * 5) {\n        return err = \"The image/video largest is 5mb.\";\n      }\n\n      return newImages.push(file);\n    });\n    if (err) dispatch({\n      type: GLOBALTYPES.ALERT,\n      payload: {\n        error: err\n      }\n    });\n    setImages([...images, ...newImages]);\n  };\n\n  const deleteImages = index => {\n    const newArr = [...images];\n    newArr.splice(index, 1);\n    setImages(newArr);\n  };\n\n  const handleStream = () => {\n    setStream(true);\n\n    if (navigator.mediaDevices && navigator.mediaDevices.getUserMedia) {\n      navigator.mediaDevices.getUserMedia({\n        video: true\n      }).then(mediaStream => {\n        videoRef.current.srcObject = mediaStream;\n        videoRef.current.play();\n        const track = mediaStream.getTracks();\n        setTracks(track[0]);\n      }).catch(err => console.log(err));\n    }\n  };\n\n  const handleCapture = () => {\n    const width = videoRef.current.clientWidth;\n    const height = videoRef.current.clientHeight;\n    refCanvas.current.setAttribute(\"width\", width);\n    refCanvas.current.setAttribute(\"height\", height);\n    const ctx = refCanvas.current.getContext('2d');\n    ctx.drawImage(videoRef.current, 0, 0, width, height);\n    let URL = refCanvas.current.toDataURL();\n    setImages([...images, {\n      camera: URL\n    }]);\n  };\n\n  const handleStopStream = () => {\n    tracks.stop();\n    setStream(false);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (images.length === 0) return dispatch({\n      type: GLOBALTYPES.ALERT,\n      payload: {\n        error: \"Please add your photo.\"\n      }\n    });\n\n    if (status.onEdit) {\n      dispatch(updatePost({\n        content,\n        images,\n        auth,\n        status\n      }));\n    } else {\n      dispatch(createPost({\n        content,\n        images,\n        auth,\n        socket\n      }));\n    }\n\n    setContent('');\n    setImages([]);\n    if (tracks) tracks.stop();\n    dispatch({\n      type: GLOBALTYPES.STATUS,\n      payload: false\n    });\n  };\n\n  useEffect(() => {\n    if (status.onEdit) {\n      setContent(status.content);\n      setImages(status.images);\n    }\n  }, [status]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"status_modal\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"status_header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n          className: \"m-0\",\n          children: \"Create Post\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          onClick: () => dispatch({\n            type: GLOBALTYPES.STATUS,\n            payload: false\n          }),\n          children: \"\\xD7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"status_body\",\n        children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n          name: \"content\",\n          value: content,\n          placeholder: `${auth.user.username}, what are you thinking?`,\n          onChange: e => setContent(e.target.value),\n          style: {\n            filter: theme ? 'invert(1)' : 'invert(0)',\n            color: theme ? 'white' : '#111',\n            background: theme ? 'rgba(0,0,0,.03)' : ''\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"d-flex\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex-fill\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Icons, {\n            setContent: setContent,\n            content: content,\n            theme: theme\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"show_images\",\n          children: images.map((img, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"file_img\",\n            children: [img.camera ? imageShow(img.camera, theme) : img.url ? /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: img.url.match(/video/i) ? videoShow(img.url, theme) : imageShow(img.url, theme)\n            }, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: img.type.match(/video/i) ? videoShow(URL.createObjectURL(img), theme) : imageShow(URL.createObjectURL(img), theme)\n            }, void 0, false), /*#__PURE__*/_jsxDEV(\"span\", {\n              onClick: () => deleteImages(index),\n              children: \"\\xD7\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 37\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 21\n        }, this), stream && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stream position-relative\",\n          children: [/*#__PURE__*/_jsxDEV(\"video\", {\n            autoPlay: true,\n            muted: true,\n            ref: videoRef,\n            width: \"100%\",\n            height: \"100%\",\n            style: {\n              filter: theme ? 'invert(1)' : 'invert(0)'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            onClick: handleStopStream,\n            children: \"\\xD7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n            ref: refCanvas,\n            style: {\n              display: 'none'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input_images\",\n          children: stream ? /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fas fa-camera\",\n            onClick: handleCapture\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 31\n          }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fas fa-camera\",\n              onClick: handleStream\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 178,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"file_upload\",\n              children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"fas fa-image\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 181,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"file\",\n                name: \"file\",\n                id: \"file\",\n                multiple: true,\n                accept: \"image/*,video/*\",\n                onChange: handleChangeImages\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 182,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 180,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"status_footer\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-secondary w-100\",\n          type: \"submit\",\n          children: \"Post\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 108,\n    columnNumber: 9\n  }, this);\n};\n\n_s(StatusModal, \"sMpoTEN6w1MuucuMvOlfqtv6r8E=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = StatusModal;\nexport default StatusModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"StatusModal\");","map":{"version":3,"sources":["F:/MERN-Stack-Build-a-social-media-app/client/src/components/StatusModal.js"],"names":["React","useState","useRef","useEffect","useSelector","useDispatch","GLOBALTYPES","createPost","updatePost","Icons","imageShow","videoShow","StatusModal","auth","theme","status","socket","state","dispatch","content","setContent","images","setImages","stream","setStream","videoRef","refCanvas","tracks","setTracks","handleChangeImages","e","files","target","err","newImages","forEach","file","size","push","type","ALERT","payload","error","deleteImages","index","newArr","splice","handleStream","navigator","mediaDevices","getUserMedia","video","then","mediaStream","current","srcObject","play","track","getTracks","catch","console","log","handleCapture","width","clientWidth","height","clientHeight","setAttribute","ctx","getContext","drawImage","URL","toDataURL","camera","handleStopStream","stop","handleSubmit","preventDefault","length","onEdit","STATUS","user","username","value","filter","color","background","map","img","url","match","createObjectURL","display"],"mappings":"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","sourcesContent":["import React, { useState, useRef, useEffect } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { GLOBALTYPES } from '../redux/actions/globalTypes'\r\nimport { createPost, updatePost } from '../redux/actions/postAction'\r\nimport Icons from './Icons'\r\nimport { imageShow, videoShow } from '../utils/mediaShow'\r\n\r\nconst StatusModal = () => {\r\n    const { auth, theme, status, socket } = useSelector(state => state)\r\n    const dispatch = useDispatch()\r\n\r\n    const [content, setContent] = useState('')\r\n    const [images, setImages] = useState([])\r\n\r\n    const [stream, setStream] = useState(false)\r\n    const videoRef = useRef()\r\n    const refCanvas = useRef()\r\n    const [tracks, setTracks] = useState('')\r\n\r\n    const handleChangeImages = e => {\r\n        const files = [...e.target.files]\r\n        let err = \"\"\r\n        let newImages = []\r\n\r\n        files.forEach(file => {\r\n            if(!file) return err = \"File does not exist.\"\r\n\r\n            if(file.size > 1024 * 1024 * 5){\r\n                return err = \"The image/video largest is 5mb.\"\r\n            }\r\n\r\n            return newImages.push(file)\r\n        })\r\n\r\n        if(err) dispatch({ type: GLOBALTYPES.ALERT, payload: {error: err} })\r\n        setImages([...images, ...newImages])\r\n    }\r\n\r\n    const deleteImages = (index) => {\r\n        const newArr = [...images]\r\n        newArr.splice(index, 1)\r\n        setImages(newArr)\r\n    }\r\n\r\n    const handleStream = () => {\r\n        setStream(true)\r\n        if(navigator.mediaDevices && navigator.mediaDevices.getUserMedia){\r\n            navigator.mediaDevices.getUserMedia({video: true})\r\n            .then(mediaStream => {\r\n                videoRef.current.srcObject = mediaStream\r\n                videoRef.current.play()\r\n\r\n                const track = mediaStream.getTracks()\r\n                setTracks(track[0])\r\n            }).catch(err => console.log(err))\r\n        }\r\n    }\r\n\r\n    const handleCapture = () => {\r\n        const width = videoRef.current.clientWidth;\r\n        const height = videoRef.current.clientHeight;\r\n\r\n        refCanvas.current.setAttribute(\"width\", width)\r\n        refCanvas.current.setAttribute(\"height\", height)\r\n\r\n        const ctx = refCanvas.current.getContext('2d')\r\n        ctx.drawImage(videoRef.current, 0, 0, width, height)\r\n        let URL = refCanvas.current.toDataURL()\r\n        setImages([...images, {camera: URL}])\r\n    }\r\n\r\n    const handleStopStream = () => {\r\n        tracks.stop()\r\n        setStream(false)\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        if(images.length === 0)\r\n        return dispatch({ \r\n            type: GLOBALTYPES.ALERT, payload: {error: \"Please add your photo.\"}\r\n        })\r\n\r\n        if(status.onEdit){\r\n            dispatch(updatePost({content, images, auth, status}))\r\n        }else{\r\n            dispatch(createPost({content, images, auth, socket}))\r\n        }\r\n        \r\n\r\n        setContent('')\r\n        setImages([])\r\n        if(tracks) tracks.stop()\r\n        dispatch({ type: GLOBALTYPES.STATUS, payload: false})\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(status.onEdit){\r\n            setContent(status.content)\r\n            setImages(status.images)\r\n        }\r\n    },[status])\r\n\r\n\r\n   \r\n\r\n    return (\r\n        <div className=\"status_modal\">\r\n            <form onSubmit={handleSubmit}>\r\n                <div className=\"status_header\">\r\n                    <h5 className=\"m-0\">Create Post</h5>\r\n                    <span onClick={() => dispatch({\r\n                        type: GLOBALTYPES.STATUS, payload: false\r\n                    })}>\r\n                        &times;\r\n                    </span>\r\n                </div>\r\n\r\n                <div className=\"status_body\">\r\n                    <textarea name=\"content\" value={content}\r\n                    placeholder={`${auth.user.username}, what are you thinking?`}\r\n                    onChange={e => setContent(e.target.value)}\r\n                    style={{\r\n                        filter: theme ? 'invert(1)' : 'invert(0)',\r\n                        color: theme ? 'white' : '#111',\r\n                        background: theme ? 'rgba(0,0,0,.03)' : '',\r\n                    }} />\r\n\r\n                    <div className=\"d-flex\">\r\n                        <div className=\"flex-fill\"></div>\r\n                        <Icons setContent={setContent} content={content} theme={theme} />\r\n                    </div>\r\n\r\n                    <div className=\"show_images\">\r\n                        {\r\n                            images.map((img, index) => (\r\n                                <div key={index} id=\"file_img\">\r\n                                    {\r\n                                        img.camera ? imageShow(img.camera, theme)\r\n                                        : img.url\r\n                                            ?<>\r\n                                                {\r\n                                                    img.url.match(/video/i)\r\n                                                    ? videoShow(img.url, theme) \r\n                                                    : imageShow(img.url, theme)\r\n                                                }\r\n                                            </>\r\n                                            :<>\r\n                                                {\r\n                                                    img.type.match(/video/i)\r\n                                                    ? videoShow(URL.createObjectURL(img), theme) \r\n                                                    : imageShow(URL.createObjectURL(img), theme)\r\n                                                }\r\n                                            </>\r\n                                    }\r\n                                    <span onClick={() => deleteImages(index)}>&times;</span>\r\n                                </div>\r\n                            ))\r\n                        }\r\n                    </div>\r\n\r\n                    {\r\n                        stream && \r\n                        <div className=\"stream position-relative\">\r\n                            <video autoPlay muted ref={videoRef} width=\"100%\" height=\"100%\"\r\n                            style={{filter: theme ? 'invert(1)' : 'invert(0)'}} />\r\n                            \r\n                            <span onClick={handleStopStream}>&times;</span>\r\n                            <canvas ref={refCanvas} style={{display: 'none'}} />\r\n                        </div>\r\n                    }\r\n\r\n                    <div className=\"input_images\">\r\n                        {\r\n                            stream \r\n                            ? <i className=\"fas fa-camera\" onClick={handleCapture} />\r\n                            : <>\r\n                                <i className=\"fas fa-camera\" onClick={handleStream} />\r\n\r\n                                <div className=\"file_upload\">\r\n                                    <i className=\"fas fa-image\" />\r\n                                    <input type=\"file\" name=\"file\" id=\"file\"\r\n                                    multiple accept=\"image/*,video/*\" onChange={handleChangeImages} />\r\n                                </div>\r\n                            </>\r\n                        }\r\n                        \r\n                    </div>\r\n\r\n                </div>\r\n\r\n                <div className=\"status_footer\">\r\n                    <button className=\"btn btn-secondary w-100\" type=\"submit\">\r\n                        Post\r\n                    </button>\r\n                </div>\r\n\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default StatusModal\r\n"]},"metadata":{},"sourceType":"module"}