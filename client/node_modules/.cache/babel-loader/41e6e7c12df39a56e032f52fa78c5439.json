{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"F:\\\\MERN-Stack-Build-a-social-media-app\\\\client\\\\src\\\\components\\\\message\\\\CallModal.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef, useCallback } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport Avatar from '../Avatar';\nimport { GLOBALTYPES } from '../../redux/actions/globalTypes';\nimport { addMessage } from '../../redux/actions/messageAction';\nimport RingRing from '../../audio/ringring.mp3';\n\nconst CallModal = () => {\n  _s();\n\n  const {\n    call,\n    auth,\n    peer,\n    socket,\n    theme\n  } = useSelector(state => state);\n  const dispatch = useDispatch();\n  const [hours, setHours] = useState(0);\n  const [mins, setMins] = useState(0);\n  const [second, setSecond] = useState(0);\n  const [total, setTotal] = useState(0);\n  const [answer, setAnswer] = useState(false);\n  const youVideo = useRef();\n  const otherVideo = useRef();\n  const [tracks, setTracks] = useState(null);\n  const [newCall, setNewCall] = useState(null); // Set Time\n\n  useEffect(() => {\n    const setTime = () => {\n      setTotal(t => t + 1);\n      setTimeout(setTime, 1000);\n    };\n\n    setTime();\n    return () => setTotal(0);\n  }, []);\n  useEffect(() => {\n    setSecond(total % 60);\n    setMins(parseInt(total / 60));\n    setHours(parseInt(total / 3600));\n  }, [total]); // End Call\n\n  const addCallMessage = useCallback((call, times, disconnect) => {\n    if (call.recipient !== auth.user._id || disconnect) {\n      const msg = {\n        sender: call.sender,\n        recipient: call.recipient,\n        text: '',\n        media: [],\n        call: {\n          video: call.video,\n          times\n        },\n        createdAt: new Date().toISOString()\n      };\n      dispatch(addMessage({\n        msg,\n        auth,\n        socket\n      }));\n    }\n  }, [auth, dispatch, socket]);\n\n  const handleEndCall = () => {\n    tracks && tracks.forEach(track => track.stop());\n    if (newCall) newCall.close();\n    let times = answer ? total : 0;\n    socket.emit('endCall', { ...call,\n      times\n    });\n    addCallMessage(call, times);\n    dispatch({\n      type: GLOBALTYPES.CALL,\n      payload: null\n    });\n  };\n\n  useEffect(() => {\n    if (answer) {\n      setTotal(0);\n    } else {\n      const timer = setTimeout(() => {\n        socket.emit('endCall', { ...call,\n          times: 0\n        });\n        addCallMessage(call, 0);\n        dispatch({\n          type: GLOBALTYPES.CALL,\n          payload: null\n        });\n      }, 15000);\n      return () => clearTimeout(timer);\n    }\n  }, [dispatch, answer, call, socket, addCallMessage]);\n  useEffect(() => {\n    socket.on('endCallToClient', data => {\n      tracks && tracks.forEach(track => track.stop());\n      if (newCall) newCall.close();\n      addCallMessage(data, data.times);\n      dispatch({\n        type: GLOBALTYPES.CALL,\n        payload: null\n      });\n    });\n    return () => socket.off('endCallToClient');\n  }, [socket, dispatch, tracks, addCallMessage, newCall]); // Stream Media\n\n  const openStream = video => {\n    const config = {\n      audio: true,\n      video\n    };\n    return navigator.mediaDevices.getUserMedia(config);\n  };\n\n  const playStream = (tag, stream) => {\n    let video = tag;\n    video.srcObject = stream;\n    video.play();\n  }; // Answer Call\n\n\n  const handleAnswer = () => {\n    openStream(call.video).then(stream => {\n      playStream(youVideo.current, stream);\n      const track = stream.getTracks();\n      setTracks(track);\n      const newCall = peer.call(call.peerId, stream);\n      newCall.on('stream', function (remoteStream) {\n        playStream(otherVideo.current, remoteStream);\n      });\n      setAnswer(true);\n      setNewCall(newCall);\n    });\n  };\n\n  useEffect(() => {\n    peer.on('call', newCall => {\n      openStream(call.video).then(stream => {\n        if (youVideo.current) {\n          playStream(youVideo.current, stream);\n        }\n\n        const track = stream.getTracks();\n        setTracks(track);\n        newCall.answer(stream);\n        newCall.on('stream', function (remoteStream) {\n          if (otherVideo.current) {\n            playStream(otherVideo.current, remoteStream);\n          }\n        });\n        setAnswer(true);\n        setNewCall(newCall);\n      });\n    });\n    return () => peer.removeListener('call');\n  }, [peer, call.video]); // Disconnect\n\n  useEffect(() => {\n    socket.on('callerDisconnect', () => {\n      tracks && tracks.forEach(track => track.stop());\n      if (newCall) newCall.close();\n      let times = answer ? total : 0;\n      addCallMessage(call, times, true);\n      dispatch({\n        type: GLOBALTYPES.CALL,\n        payload: null\n      });\n      dispatch({\n        type: GLOBALTYPES.ALERT,\n        payload: {\n          error: `The ${call.username} disconnect`\n        }\n      });\n    });\n    return () => socket.off('callerDisconnect');\n  }, [socket, tracks, dispatch, call, addCallMessage, answer, total, newCall]); // Play - Pause Audio\n\n  const playAudio = newAudio => {\n    newAudio.play();\n  };\n\n  const pauseAudio = newAudio => {\n    newAudio.pause();\n    newAudio.currentTime = 0;\n  };\n\n  useEffect(() => {\n    let newAudio = new Audio(RingRing);\n\n    if (answer) {\n      pauseAudio(newAudio);\n    } else {\n      playAudio(newAudio);\n    }\n\n    return () => pauseAudio(newAudio);\n  }, [answer]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"call_modal\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"call_box\",\n      style: {\n        display: answer && call.video ? 'none' : 'flex'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center\",\n        style: {\n          padding: '40px 0'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Avatar, {\n          src: call.avatar,\n          size: \"supper-avatar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: call.username\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n          children: call.fullname\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 21\n        }, this), answer ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: hours.toString().length < 2 ? '0' + hours : hours\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \":\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: mins.toString().length < 2 ? '0' + mins : mins\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \":\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: second.toString().length < 2 ? '0' + second : second\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 27\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          children: call.video ? /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"calling video...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 35\n          }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"calling audio...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 35\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 27\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 17\n      }, this), !answer && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"timer\",\n        children: [/*#__PURE__*/_jsxDEV(\"small\", {\n          children: mins.toString().length < 2 ? '0' + mins : mins\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n          children: \":\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n          children: second.toString().length < 2 ? '0' + second : second\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"call_menu\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"material-icons text-danger\",\n          onClick: handleEndCall,\n          children: \"call_end\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 21\n        }, this), call.recipient === auth.user._id && !answer && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: call.video ? /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"material-icons text-success\",\n            onClick: handleAnswer,\n            children: \"videocam\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 35\n          }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"material-icons text-success\",\n            onClick: handleAnswer,\n            children: \"call\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 35\n          }, this)\n        }, void 0, false)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"show_video\",\n      style: {\n        opacity: answer && call.video ? '1' : '0',\n        filter: theme ? 'invert(1)' : 'invert(0)'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"video\", {\n        ref: youVideo,\n        className: \"you_video\",\n        playsInline: true,\n        muted: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"video\", {\n        ref: otherVideo,\n        className: \"other_video\",\n        playsInline: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"time_video\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: hours.toString().length < 2 ? '0' + hours : hours\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \":\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: mins.toString().length < 2 ? '0' + mins : mins\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \":\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: second.toString().length < 2 ? '0' + second : second\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"material-icons text-danger end_call\",\n        onClick: handleEndCall,\n        children: \"call_end\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 185,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CallModal, \"iC6pXpvmpWUnvFDPqhtvSJs76M8=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = CallModal;\nexport default CallModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"CallModal\");","map":{"version":3,"sources":["F:/MERN-Stack-Build-a-social-media-app/client/src/components/message/CallModal.js"],"names":["React","useState","useEffect","useRef","useCallback","useSelector","useDispatch","Avatar","GLOBALTYPES","addMessage","RingRing","CallModal","call","auth","peer","socket","theme","state","dispatch","hours","setHours","mins","setMins","second","setSecond","total","setTotal","answer","setAnswer","youVideo","otherVideo","tracks","setTracks","newCall","setNewCall","setTime","t","setTimeout","parseInt","addCallMessage","times","disconnect","recipient","user","_id","msg","sender","text","media","video","createdAt","Date","toISOString","handleEndCall","forEach","track","stop","close","emit","type","CALL","payload","timer","clearTimeout","on","data","off","openStream","config","audio","navigator","mediaDevices","getUserMedia","playStream","tag","stream","srcObject","play","handleAnswer","then","current","getTracks","peerId","remoteStream","removeListener","ALERT","error","username","playAudio","newAudio","pauseAudio","pause","currentTime","Audio","display","padding","avatar","fullname","toString","length","opacity","filter"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef, useCallback } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport Avatar from '../Avatar'\r\nimport { GLOBALTYPES } from '../../redux/actions/globalTypes'\r\nimport { addMessage } from '../../redux/actions/messageAction'\r\nimport RingRing from '../../audio/ringring.mp3'\r\n\r\nconst CallModal = () => {\r\n    const { call, auth, peer, socket, theme } = useSelector(state => state)\r\n    const dispatch = useDispatch()\r\n\r\n    const [hours, setHours] = useState(0)\r\n    const [mins, setMins] = useState(0)\r\n    const [second, setSecond] = useState(0)\r\n    const [total, setTotal] = useState(0)\r\n\r\n    const [answer, setAnswer] = useState(false)\r\n    const youVideo = useRef()\r\n    const otherVideo = useRef()\r\n    const [tracks, setTracks] = useState(null)\r\n    const [newCall, setNewCall] = useState(null)\r\n\r\n    // Set Time\r\n    useEffect(() => {\r\n        const setTime = () => {\r\n            setTotal(t => t + 1)\r\n            setTimeout(setTime, 1000)\r\n        }\r\n        setTime()\r\n\r\n        return () => setTotal(0)\r\n    },[])\r\n\r\n    useEffect(() => {\r\n        setSecond(total%60)\r\n        setMins(parseInt(total/60))\r\n        setHours(parseInt(total/3600))\r\n    },[total])\r\n\r\n\r\n    // End Call\r\n    const addCallMessage = useCallback((call, times, disconnect) => {\r\n        if(call.recipient !== auth.user._id || disconnect){\r\n            const msg = {\r\n                sender: call.sender,\r\n                recipient: call.recipient,\r\n                text: '', \r\n                media: [],\r\n                call: {video: call.video, times},\r\n                createdAt: new Date().toISOString()\r\n            }\r\n            dispatch(addMessage({msg, auth, socket}))\r\n        }\r\n    },[auth, dispatch, socket])\r\n\r\n    const handleEndCall = () => {\r\n        tracks && tracks.forEach(track => track.stop())\r\n        if(newCall) newCall.close()\r\n        let times = answer ? total : 0\r\n        socket.emit('endCall', {...call, times})\r\n        \r\n        addCallMessage(call, times)\r\n        dispatch({type: GLOBALTYPES.CALL, payload: null })\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(answer){\r\n            setTotal(0)\r\n        }else{\r\n            const timer = setTimeout(() => {\r\n                socket.emit('endCall', {...call, times: 0})\r\n                addCallMessage(call, 0)\r\n                dispatch({type: GLOBALTYPES.CALL, payload: null })\r\n            }, 15000)\r\n    \r\n            return () => clearTimeout(timer)\r\n        }\r\n        \r\n    },[dispatch, answer, call, socket, addCallMessage])\r\n\r\n    useEffect(() => {\r\n        socket.on('endCallToClient', data => {\r\n            tracks && tracks.forEach(track => track.stop())\r\n            if(newCall) newCall.close()\r\n            addCallMessage(data, data.times)\r\n            dispatch({ type: GLOBALTYPES.CALL, payload: null })\r\n        })\r\n\r\n        return () => socket.off('endCallToClient')\r\n    },[socket, dispatch, tracks, addCallMessage, newCall])\r\n\r\n\r\n    // Stream Media\r\n    const openStream = (video) => {\r\n        const config = { audio: true, video }\r\n        return navigator.mediaDevices.getUserMedia(config)\r\n    }\r\n\r\n    const playStream = (tag, stream) => {\r\n        let video = tag;\r\n        video.srcObject = stream;\r\n        video.play()\r\n    }\r\n\r\n    // Answer Call\r\n    const handleAnswer = () => {\r\n        openStream(call.video).then(stream => {\r\n            playStream(youVideo.current, stream)\r\n            const track = stream.getTracks()\r\n            setTracks(track)\r\n            \r\n            const newCall = peer.call(call.peerId, stream);\r\n            newCall.on('stream', function(remoteStream) {\r\n                playStream(otherVideo.current, remoteStream)\r\n            });\r\n            setAnswer(true)\r\n            setNewCall(newCall)\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n        peer.on('call', newCall => {\r\n            openStream(call.video).then(stream => {\r\n                if(youVideo.current){\r\n                    playStream(youVideo.current, stream)\r\n                }\r\n                const track = stream.getTracks()\r\n                setTracks(track)\r\n                \r\n                newCall.answer(stream)\r\n                newCall.on('stream', function(remoteStream) {\r\n                    if(otherVideo.current){\r\n                        playStream(otherVideo.current, remoteStream)\r\n                    }\r\n                });\r\n                setAnswer(true) \r\n                setNewCall(newCall)\r\n            })\r\n        })\r\n        return () => peer.removeListener('call')\r\n    },[peer, call.video])\r\n\r\n    // Disconnect\r\n    useEffect(() => {\r\n        socket.on('callerDisconnect', () => {\r\n            tracks && tracks.forEach(track => track.stop())\r\n            if(newCall) newCall.close()\r\n            let times = answer ? total : 0\r\n            addCallMessage(call, times, true)\r\n\r\n            dispatch({type: GLOBALTYPES.CALL, payload: null })\r\n\r\n            dispatch({\r\n                type: GLOBALTYPES.ALERT, \r\n                payload: {error: `The ${call.username} disconnect`} \r\n            })\r\n        })\r\n\r\n        return () => socket.off('callerDisconnect')\r\n    },[socket, tracks, dispatch, call, addCallMessage, answer, total, newCall])\r\n\r\n    // Play - Pause Audio\r\n    const playAudio = (newAudio) => {\r\n        newAudio.play()\r\n    }\r\n\r\n    const pauseAudio = (newAudio) => {\r\n        newAudio.pause()\r\n        newAudio.currentTime = 0\r\n    }\r\n\r\n    useEffect(() => {\r\n        let newAudio = new Audio(RingRing)\r\n        if(answer){\r\n            pauseAudio(newAudio)\r\n        }else{\r\n            playAudio(newAudio)\r\n        }\r\n\r\n        return () => pauseAudio(newAudio)\r\n    },[answer])\r\n\r\n\r\n    return (\r\n        <div className=\"call_modal\">\r\n            <div className=\"call_box\" style={{\r\n                display: (answer && call.video) ? 'none' : 'flex'\r\n            }} >\r\n\r\n                <div className=\"text-center\" style={{padding: '40px 0'}} >\r\n                    <Avatar src={call.avatar} size=\"supper-avatar\" />\r\n                    <h4>{call.username}</h4>\r\n                    <h6>{call.fullname}</h6>\r\n\r\n                    {\r\n                        answer \r\n                        ? <div>\r\n                            <span>{ hours.toString().length < 2 ? '0' + hours : hours }</span>\r\n                            <span>:</span>\r\n                            <span>{ mins.toString().length < 2 ? '0' + mins : mins }</span>\r\n                            <span>:</span>\r\n                            <span>{ second.toString().length < 2 ? '0' + second : second }</span>\r\n                        </div>\r\n                        : <div>\r\n                            {\r\n                                call.video\r\n                                ? <span>calling video...</span>\r\n                                : <span>calling audio...</span>\r\n                            }\r\n                        </div>\r\n                    }\r\n                    \r\n                </div>\r\n                \r\n                {\r\n                    !answer && \r\n                    <div className=\"timer\">\r\n                        <small>{ mins.toString().length < 2 ? '0' + mins : mins }</small>\r\n                        <small>:</small>\r\n                        <small>{ second.toString().length < 2 ? '0' + second : second }</small>\r\n                    </div>\r\n                }\r\n                \r\n\r\n                <div className=\"call_menu\">\r\n                    <button className=\"material-icons text-danger\"\r\n                    onClick={handleEndCall}>\r\n                        call_end\r\n                    </button>\r\n                    \r\n                    {\r\n                        (call.recipient === auth.user._id && !answer) &&\r\n                        <>\r\n                            {\r\n                                call.video\r\n                                ? <button className=\"material-icons text-success\"\r\n                                onClick={handleAnswer}>\r\n                                    videocam\r\n                                </button>\r\n                                : <button className=\"material-icons text-success\"\r\n                                onClick={handleAnswer}>\r\n                                    call\r\n                                </button>\r\n                            }\r\n                        </>\r\n                    }\r\n                    \r\n                </div>\r\n                \r\n            </div>\r\n\r\n            <div className=\"show_video\" style={{\r\n                opacity: (answer && call.video) ? '1' : '0',\r\n                filter: theme ? 'invert(1)' : 'invert(0)'\r\n            }} >\r\n\r\n                <video ref={youVideo} className=\"you_video\" playsInline muted />\r\n                <video ref={otherVideo} className=\"other_video\" playsInline />\r\n\r\n                <div className=\"time_video\">\r\n                    <span>{ hours.toString().length < 2 ? '0' + hours : hours }</span>\r\n                    <span>:</span>\r\n                    <span>{ mins.toString().length < 2 ? '0' + mins : mins }</span>\r\n                    <span>:</span>\r\n                    <span>{ second.toString().length < 2 ? '0' + second : second }</span>\r\n                </div>\r\n\r\n                <button className=\"material-icons text-danger end_call\"\r\n                onClick={handleEndCall}>\r\n                    call_end\r\n                </button>\r\n\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CallModal\r\n"]},"metadata":{},"sourceType":"module"}