{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"F:\\\\MERN-Stack-Build-a-social-media-app\\\\client\\\\src\\\\components\\\\home\\\\InputComment.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { createComment } from '../../redux/actions/commentAction';\nimport Icons from '../Icons';\n\nconst InputComment = ({\n  children,\n  post,\n  onReply,\n  setOnReply\n}) => {\n  _s();\n\n  const [content, setContent] = useState('');\n  const {\n    auth,\n    socket,\n    theme\n  } = useSelector(state => state);\n  const dispatch = useDispatch();\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (!content.trim()) {\n      if (setOnReply) return setOnReply(false);\n      return;\n    }\n\n    setContent('');\n    const newComment = {\n      content,\n      likes: [],\n      user: auth.user,\n      createdAt: new Date().toISOString(),\n      reply: onReply && onReply.commentId,\n      tag: onReply && onReply.user\n    };\n    dispatch(createComment({\n      post,\n      newComment,\n      auth,\n      socket\n    }));\n    if (setOnReply) return setOnReply(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"card-footer comment_input\",\n    onSubmit: handleSubmit,\n    children: [children, /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Add your comments...\",\n      value: content,\n      onChange: e => setContent(e.target.value),\n      style: {\n        filter: theme ? 'invert(1)' : 'invert(0)',\n        color: theme ? 'white' : '#111',\n        background: theme ? 'rgba(0,0,0,.03)' : ''\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Icons, {\n      setContent: setContent,\n      content: content,\n      theme: theme\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      className: \"postBtn\",\n      children: \"Post\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n};\n\n_s(InputComment, \"9Ns6TVcV9j9BrXerS+M2hCNlVI4=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = InputComment;\nexport default InputComment;\n\nvar _c;\n\n$RefreshReg$(_c, \"InputComment\");","map":{"version":3,"sources":["F:/MERN-Stack-Build-a-social-media-app/client/src/components/home/InputComment.js"],"names":["React","useState","useSelector","useDispatch","createComment","Icons","InputComment","children","post","onReply","setOnReply","content","setContent","auth","socket","theme","state","dispatch","handleSubmit","e","preventDefault","trim","newComment","likes","user","createdAt","Date","toISOString","reply","commentId","tag","target","value","filter","color","background"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,aAAT,QAA8B,mCAA9B;AACA,OAAOC,KAAP,MAAkB,UAAlB;;AAEA,MAAMC,YAAY,GAAG,CAAC;AAACC,EAAAA,QAAD;AAAWC,EAAAA,IAAX;AAAiBC,EAAAA,OAAjB;AAA0BC,EAAAA;AAA1B,CAAD,KAA2C;AAAA;;AAC5D,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBX,QAAQ,CAAC,EAAD,CAAtC;AAEA,QAAM;AAAEY,IAAAA,IAAF;AAAQC,IAAAA,MAAR;AAAgBC,IAAAA;AAAhB,MAA0Bb,WAAW,CAACc,KAAK,IAAIA,KAAV,CAA3C;AACA,QAAMC,QAAQ,GAAGd,WAAW,EAA5B;;AAEA,QAAMe,YAAY,GAAIC,CAAD,IAAO;AACxBA,IAAAA,CAAC,CAACC,cAAF;;AACA,QAAG,CAACT,OAAO,CAACU,IAAR,EAAJ,EAAmB;AACf,UAAGX,UAAH,EAAe,OAAOA,UAAU,CAAC,KAAD,CAAjB;AACf;AACH;;AAEDE,IAAAA,UAAU,CAAC,EAAD,CAAV;AAEA,UAAMU,UAAU,GAAG;AACfX,MAAAA,OADe;AAEfY,MAAAA,KAAK,EAAE,EAFQ;AAGfC,MAAAA,IAAI,EAAEX,IAAI,CAACW,IAHI;AAIfC,MAAAA,SAAS,EAAE,IAAIC,IAAJ,GAAWC,WAAX,EAJI;AAKfC,MAAAA,KAAK,EAAEnB,OAAO,IAAIA,OAAO,CAACoB,SALX;AAMfC,MAAAA,GAAG,EAAErB,OAAO,IAAIA,OAAO,CAACe;AANT,KAAnB;AASAP,IAAAA,QAAQ,CAACb,aAAa,CAAC;AAACI,MAAAA,IAAD;AAAOc,MAAAA,UAAP;AAAmBT,MAAAA,IAAnB;AAAyBC,MAAAA;AAAzB,KAAD,CAAd,CAAR;AAEA,QAAGJ,UAAH,EAAe,OAAOA,UAAU,CAAC,KAAD,CAAjB;AAClB,GArBD;;AAuBA,sBACI;AAAM,IAAA,SAAS,EAAC,2BAAhB;AAA4C,IAAA,QAAQ,EAAEQ,YAAtD;AAAA,eACKX,QADL,eAEI;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,WAAW,EAAC,sBAA/B;AACA,MAAA,KAAK,EAAEI,OADP;AACgB,MAAA,QAAQ,EAAEQ,CAAC,IAAIP,UAAU,CAACO,CAAC,CAACY,MAAF,CAASC,KAAV,CADzC;AAEA,MAAA,KAAK,EAAE;AACHC,QAAAA,MAAM,EAAElB,KAAK,GAAG,WAAH,GAAiB,WAD3B;AAEHmB,QAAAA,KAAK,EAAEnB,KAAK,GAAG,OAAH,GAAa,MAFtB;AAGHoB,QAAAA,UAAU,EAAEpB,KAAK,GAAG,iBAAH,GAAuB;AAHrC;AAFP;AAAA;AAAA;AAAA;AAAA,YAFJ,eAUI,QAAC,KAAD;AAAO,MAAA,UAAU,EAAEH,UAAnB;AAA+B,MAAA,OAAO,EAAED,OAAxC;AAAiD,MAAA,KAAK,EAAEI;AAAxD;AAAA;AAAA;AAAA;AAAA,YAVJ,eAYI;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,SAAS,EAAC,SAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAZJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAkBH,CA/CD;;GAAMT,Y;UAG8BJ,W,EACfC,W;;;KAJfG,Y;AAiDN,eAAeA,YAAf","sourcesContent":["import React, { useState } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { createComment } from '../../redux/actions/commentAction'\r\nimport Icons from '../Icons'\r\n\r\nconst InputComment = ({children, post, onReply, setOnReply}) => {\r\n    const [content, setContent] = useState('')\r\n\r\n    const { auth, socket, theme } = useSelector(state => state)\r\n    const dispatch = useDispatch()\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        if(!content.trim()){\r\n            if(setOnReply) return setOnReply(false);\r\n            return;\r\n        }\r\n\r\n        setContent('')\r\n        \r\n        const newComment = {\r\n            content,\r\n            likes: [],\r\n            user: auth.user,\r\n            createdAt: new Date().toISOString(),\r\n            reply: onReply && onReply.commentId,\r\n            tag: onReply && onReply.user\r\n        }\r\n        \r\n        dispatch(createComment({post, newComment, auth, socket}))\r\n\r\n        if(setOnReply) return setOnReply(false);\r\n    }\r\n\r\n    return (\r\n        <form className=\"card-footer comment_input\" onSubmit={handleSubmit} >\r\n            {children}\r\n            <input type=\"text\" placeholder=\"Add your comments...\"\r\n            value={content} onChange={e => setContent(e.target.value)}\r\n            style={{\r\n                filter: theme ? 'invert(1)' : 'invert(0)',\r\n                color: theme ? 'white' : '#111',\r\n                background: theme ? 'rgba(0,0,0,.03)' : '',\r\n            }} />\r\n\r\n            <Icons setContent={setContent} content={content} theme={theme} />\r\n\r\n            <button type=\"submit\" className=\"postBtn\">\r\n                Post\r\n            </button>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default InputComment\r\n"]},"metadata":{},"sourceType":"module"}