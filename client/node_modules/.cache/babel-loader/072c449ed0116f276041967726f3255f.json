{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"F:\\\\MERN-Stack-Build-a-social-media-app\\\\client\\\\src\\\\SocketClient.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { POST_TYPES } from './redux/actions/postAction';\nimport { GLOBALTYPES } from './redux/actions/globalTypes';\nimport { NOTIFY_TYPES } from './redux/actions/notifyAction';\nimport { MESS_TYPES } from './redux/actions/messageAction';\nimport audiobell from './audio/got-it-done-613.mp3';\n\nconst spawnNotification = (body, icon, url, title) => {\n  let options = {\n    body,\n    icon\n  };\n  let n = new Notification(title, options);\n\n  n.onclick = e => {\n    e.preventDefault();\n    window.open(url, '_blank');\n  };\n};\n\nconst SocketClient = () => {\n  _s();\n\n  const {\n    auth,\n    socket,\n    notify,\n    online,\n    call\n  } = useSelector(state => state);\n  const dispatch = useDispatch();\n  const audioRef = useRef(); // joinUser\n\n  useEffect(() => {\n    socket.emit('joinUser', auth.user);\n  }, [socket, auth.user]); // Likes\n\n  useEffect(() => {\n    socket.on('likeToClient', newPost => {\n      dispatch({\n        type: POST_TYPES.UPDATE_POST,\n        payload: newPost\n      });\n    });\n    return () => socket.off('likeToClient');\n  }, [socket, dispatch]);\n  useEffect(() => {\n    socket.on('unLikeToClient', newPost => {\n      dispatch({\n        type: POST_TYPES.UPDATE_POST,\n        payload: newPost\n      });\n    });\n    return () => socket.off('unLikeToClient');\n  }, [socket, dispatch]); // Comments\n\n  useEffect(() => {\n    socket.on('createCommentToClient', newPost => {\n      dispatch({\n        type: POST_TYPES.UPDATE_POST,\n        payload: newPost\n      });\n    });\n    return () => socket.off('createCommentToClient');\n  }, [socket, dispatch]);\n  useEffect(() => {\n    socket.on('deleteCommentToClient', newPost => {\n      dispatch({\n        type: POST_TYPES.UPDATE_POST,\n        payload: newPost\n      });\n    });\n    return () => socket.off('deleteCommentToClient');\n  }, [socket, dispatch]); // Follow\n\n  useEffect(() => {\n    socket.on('followToClient', newUser => {\n      dispatch({\n        type: GLOBALTYPES.AUTH,\n        payload: { ...auth,\n          user: newUser\n        }\n      });\n    });\n    return () => socket.off('followToClient');\n  }, [socket, dispatch, auth]);\n  useEffect(() => {\n    socket.on('unFollowToClient', newUser => {\n      dispatch({\n        type: GLOBALTYPES.AUTH,\n        payload: { ...auth,\n          user: newUser\n        }\n      });\n    });\n    return () => socket.off('unFollowToClient');\n  }, [socket, dispatch, auth]); // Notification\n\n  useEffect(() => {\n    socket.on('createNotifyToClient', msg => {\n      dispatch({\n        type: NOTIFY_TYPES.CREATE_NOTIFY,\n        payload: msg\n      });\n      if (notify.sound) audioRef.current.play();\n      spawnNotification(msg.user.username + ' ' + msg.text, msg.user.avatar, msg.url, 'V-NETWORK');\n    });\n    return () => socket.off('createNotifyToClient');\n  }, [socket, dispatch, notify.sound]);\n  useEffect(() => {\n    socket.on('removeNotifyToClient', msg => {\n      dispatch({\n        type: NOTIFY_TYPES.REMOVE_NOTIFY,\n        payload: msg\n      });\n    });\n    return () => socket.off('removeNotifyToClient');\n  }, [socket, dispatch]); // Message\n\n  useEffect(() => {\n    socket.on('addMessageToClient', msg => {\n      dispatch({\n        type: MESS_TYPES.ADD_MESSAGE,\n        payload: msg\n      });\n      dispatch({\n        type: MESS_TYPES.ADD_USER,\n        payload: { ...msg.user,\n          text: msg.text,\n          media: msg.media\n        }\n      });\n    });\n    return () => socket.off('addMessageToClient');\n  }, [socket, dispatch]); // Check User Online / Offline\n\n  useEffect(() => {\n    socket.emit('checkUserOnline', auth.user);\n  }, [socket, auth.user]);\n  useEffect(() => {\n    socket.on('checkUserOnlineToMe', data => {\n      data.forEach(item => {\n        if (!online.includes(item.id)) {\n          dispatch({\n            type: GLOBALTYPES.ONLINE,\n            payload: item.id\n          });\n        }\n      });\n    });\n    return () => socket.off('checkUserOnlineToMe');\n  }, [socket, dispatch, online]);\n  useEffect(() => {\n    socket.on('checkUserOnlineToClient', id => {\n      if (!online.includes(id)) {\n        dispatch({\n          type: GLOBALTYPES.ONLINE,\n          payload: id\n        });\n      }\n    });\n    return () => socket.off('checkUserOnlineToClient');\n  }, [socket, dispatch, online]); // Check User Offline\n\n  useEffect(() => {\n    socket.on('CheckUserOffline', id => {\n      dispatch({\n        type: GLOBALTYPES.OFFLINE,\n        payload: id\n      });\n    });\n    return () => socket.off('CheckUserOffline');\n  }, [socket, dispatch]); // Call User\n\n  useEffect(() => {\n    socket.on('callUserToClient', data => {\n      dispatch({\n        type: GLOBALTYPES.CALL,\n        payload: data\n      });\n    });\n    return () => socket.off('callUserToClient');\n  }, [socket, dispatch]);\n  useEffect(() => {\n    socket.on('userBusy', data => {\n      dispatch({\n        type: GLOBALTYPES.ALERT,\n        payload: {\n          error: `${call.username} is busy!`\n        }\n      });\n    });\n    return () => socket.off('userBusy');\n  }, [socket, dispatch, call]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"audio\", {\n      controls: true,\n      ref: audioRef,\n      style: {\n        display: 'none'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"source\", {\n        src: audiobell,\n        type: \"audio/mp3\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(SocketClient, \"4KG/axElejuIqcaMhis5ouSp56E=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = SocketClient;\nexport default SocketClient;\n\nvar _c;\n\n$RefreshReg$(_c, \"SocketClient\");","map":{"version":3,"sources":["F:/MERN-Stack-Build-a-social-media-app/client/src/SocketClient.js"],"names":["React","useEffect","useRef","useSelector","useDispatch","POST_TYPES","GLOBALTYPES","NOTIFY_TYPES","MESS_TYPES","audiobell","spawnNotification","body","icon","url","title","options","n","Notification","onclick","e","preventDefault","window","open","SocketClient","auth","socket","notify","online","call","state","dispatch","audioRef","emit","user","on","newPost","type","UPDATE_POST","payload","off","newUser","AUTH","msg","CREATE_NOTIFY","sound","current","play","username","text","avatar","REMOVE_NOTIFY","ADD_MESSAGE","ADD_USER","media","data","forEach","item","includes","id","ONLINE","OFFLINE","CALL","ALERT","error","display"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { POST_TYPES } from './redux/actions/postAction'\r\nimport { GLOBALTYPES } from './redux/actions/globalTypes'\r\nimport { NOTIFY_TYPES } from './redux/actions/notifyAction'\r\nimport { MESS_TYPES } from './redux/actions/messageAction'\r\n\r\nimport audiobell from './audio/got-it-done-613.mp3'\r\n\r\n\r\nconst spawnNotification = (body, icon, url, title) => {\r\n    let options = {\r\n        body, icon\r\n    }\r\n    let n = new Notification(title, options)\r\n\r\n    n.onclick = e => {\r\n        e.preventDefault()\r\n        window.open(url, '_blank')\r\n    }\r\n}\r\n\r\nconst SocketClient = () => {\r\n    const { auth, socket, notify, online, call } = useSelector(state => state)\r\n    const dispatch = useDispatch()\r\n\r\n    const audioRef = useRef()\r\n\r\n    // joinUser\r\n    useEffect(() => {\r\n        socket.emit('joinUser', auth.user)\r\n    },[socket, auth.user])\r\n\r\n    // Likes\r\n    useEffect(() => {\r\n        socket.on('likeToClient', newPost =>{\r\n            dispatch({type: POST_TYPES.UPDATE_POST, payload: newPost})\r\n        })\r\n\r\n        return () => socket.off('likeToClient')\r\n    },[socket, dispatch])\r\n\r\n    useEffect(() => {\r\n        socket.on('unLikeToClient', newPost =>{\r\n            dispatch({type: POST_TYPES.UPDATE_POST, payload: newPost})\r\n        })\r\n\r\n        return () => socket.off('unLikeToClient')\r\n    },[socket, dispatch])\r\n\r\n\r\n    // Comments\r\n    useEffect(() => {\r\n        socket.on('createCommentToClient', newPost =>{\r\n            dispatch({type: POST_TYPES.UPDATE_POST, payload: newPost})\r\n        })\r\n\r\n        return () => socket.off('createCommentToClient')\r\n    },[socket, dispatch])\r\n\r\n    useEffect(() => {\r\n        socket.on('deleteCommentToClient', newPost =>{\r\n            dispatch({type: POST_TYPES.UPDATE_POST, payload: newPost})\r\n        })\r\n\r\n        return () => socket.off('deleteCommentToClient')\r\n    },[socket, dispatch])\r\n\r\n\r\n    // Follow\r\n    useEffect(() => {\r\n        socket.on('followToClient', newUser =>{\r\n            dispatch({type: GLOBALTYPES.AUTH, payload: {...auth, user: newUser}})\r\n        })\r\n\r\n        return () => socket.off('followToClient')\r\n    },[socket, dispatch, auth])\r\n\r\n    useEffect(() => {\r\n        socket.on('unFollowToClient', newUser =>{\r\n            dispatch({type: GLOBALTYPES.AUTH, payload: {...auth, user: newUser}})\r\n        })\r\n\r\n        return () => socket.off('unFollowToClient')\r\n    },[socket, dispatch, auth])\r\n\r\n\r\n    // Notification\r\n    useEffect(() => {\r\n        socket.on('createNotifyToClient', msg =>{\r\n            dispatch({type: NOTIFY_TYPES.CREATE_NOTIFY, payload: msg})\r\n\r\n            if(notify.sound) audioRef.current.play()\r\n            spawnNotification(\r\n                msg.user.username + ' ' + msg.text,\r\n                msg.user.avatar,\r\n                msg.url,\r\n                'V-NETWORK'\r\n            )\r\n        })\r\n\r\n        return () => socket.off('createNotifyToClient')\r\n    },[socket, dispatch, notify.sound])\r\n\r\n    useEffect(() => {\r\n        socket.on('removeNotifyToClient', msg =>{\r\n            dispatch({type: NOTIFY_TYPES.REMOVE_NOTIFY, payload: msg})\r\n        })\r\n\r\n        return () => socket.off('removeNotifyToClient')\r\n    },[socket, dispatch])\r\n\r\n\r\n    // Message\r\n    useEffect(() => {\r\n        socket.on('addMessageToClient', msg =>{\r\n            dispatch({type: MESS_TYPES.ADD_MESSAGE, payload: msg})\r\n\r\n            dispatch({\r\n                type: MESS_TYPES.ADD_USER, \r\n                payload: {\r\n                    ...msg.user, \r\n                    text: msg.text, \r\n                    media: msg.media\r\n                }\r\n            })\r\n        })\r\n\r\n        return () => socket.off('addMessageToClient')\r\n    },[socket, dispatch])\r\n\r\n    // Check User Online / Offline\r\n    useEffect(() => {\r\n        socket.emit('checkUserOnline', auth.user)\r\n    },[socket, auth.user])\r\n\r\n    useEffect(() => {\r\n        socket.on('checkUserOnlineToMe', data =>{\r\n            data.forEach(item => {\r\n                if(!online.includes(item.id)){\r\n                    dispatch({type: GLOBALTYPES.ONLINE, payload: item.id})\r\n                }\r\n            })\r\n        })\r\n\r\n        return () => socket.off('checkUserOnlineToMe')\r\n    },[socket, dispatch, online])\r\n\r\n    useEffect(() => {\r\n        socket.on('checkUserOnlineToClient', id =>{\r\n            if(!online.includes(id)){\r\n                dispatch({type: GLOBALTYPES.ONLINE, payload: id})\r\n            }\r\n        })\r\n\r\n        return () => socket.off('checkUserOnlineToClient')\r\n    },[socket, dispatch, online])\r\n\r\n    // Check User Offline\r\n    useEffect(() => {\r\n        socket.on('CheckUserOffline', id =>{\r\n            dispatch({type: GLOBALTYPES.OFFLINE, payload: id})\r\n        })\r\n\r\n        return () => socket.off('CheckUserOffline')\r\n    },[socket, dispatch])\r\n\r\n\r\n    // Call User\r\n    useEffect(() => {\r\n        socket.on('callUserToClient', data =>{\r\n            dispatch({type: GLOBALTYPES.CALL, payload: data})\r\n        })\r\n\r\n        return () => socket.off('callUserToClient')\r\n    },[socket, dispatch])\r\n\r\n    useEffect(() => {\r\n        socket.on('userBusy', data =>{\r\n            dispatch({type: GLOBALTYPES.ALERT, payload: {error: `${call.username} is busy!`}})\r\n        })\r\n\r\n        return () => socket.off('userBusy')\r\n    },[socket, dispatch, call])\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <audio controls ref={audioRef} style={{display: 'none'}} >\r\n                <source src={audiobell} type=\"audio/mp3\" />\r\n            </audio>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SocketClient\r\n"]},"metadata":{},"sourceType":"module"}