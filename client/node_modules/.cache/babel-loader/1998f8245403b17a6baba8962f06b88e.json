{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"F:\\\\MERN-Stack-Build-a-social-media-app\\\\client\\\\src\\\\components\\\\message\\\\LeftSide.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport UserCard from '../UserCard';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getDataAPI } from '../../utils/fetchData';\nimport { GLOBALTYPES } from '../../redux/actions/globalTypes';\nimport { useHistory, useParams } from 'react-router-dom';\nimport { MESS_TYPES, getConversations } from '../../redux/actions/messageAction';\n\nconst LeftSide = () => {\n  _s();\n\n  const {\n    auth,\n    message,\n    online\n  } = useSelector(state => state);\n  const dispatch = useDispatch();\n  const [search, setSearch] = useState('');\n  const [searchUsers, setSearchUsers] = useState([]);\n  const history = useHistory();\n  const {\n    id\n  } = useParams();\n  const pageEnd = useRef();\n  const [page, setPage] = useState(0);\n\n  const handleSearch = async e => {\n    e.preventDefault();\n    if (!search) return setSearchUsers([]);\n\n    try {\n      const res = await getDataAPI(`search?username=${search}`, auth.token);\n      setSearchUsers(res.data.users);\n    } catch (err) {\n      dispatch({\n        type: GLOBALTYPES.ALERT,\n        payload: {\n          error: err.response.data.msg\n        }\n      });\n    }\n  };\n\n  const handleAddUser = user => {\n    setSearch('');\n    setSearchUsers([]);\n    dispatch({\n      type: MESS_TYPES.ADD_USER,\n      payload: { ...user,\n        text: '',\n        media: []\n      }\n    });\n    dispatch({\n      type: MESS_TYPES.CHECK_ONLINE_OFFLINE,\n      payload: online\n    });\n    return history.push(`/message/${user._id}`);\n  };\n\n  const isActive = user => {\n    if (id === user._id) return 'active';\n    return '';\n  };\n\n  useEffect(() => {\n    if (message.firstLoad) return;\n    dispatch(getConversations({\n      auth\n    }));\n  }, [dispatch, auth, message.firstLoad]); // Load More\n\n  useEffect(() => {\n    const observer = new IntersectionObserver(entries => {\n      if (entries[0].isIntersecting) {\n        setPage(p => p + 1);\n      }\n    }, {\n      threshold: 0.1\n    });\n    observer.observe(pageEnd.current);\n  }, [setPage]);\n  useEffect(() => {\n    if (message.resultUsers >= (page - 1) * 9 && page > 1) {\n      dispatch(getConversations({\n        auth,\n        page\n      }));\n    }\n  }, [message.resultUsers, page, auth, dispatch]); // Check User Online - Offline\n\n  useEffect(() => {\n    if (message.firstLoad) {\n      dispatch({\n        type: MESS_TYPES.CHECK_ONLINE_OFFLINE,\n        payload: online\n      });\n    }\n  }, [online, message.firstLoad, dispatch]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"message_header\",\n      onSubmit: handleSearch,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: search,\n        placeholder: \"Enter to Search...\",\n        onChange: e => setSearch(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        style: {\n          display: 'none'\n        },\n        children: \"Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"message_chat_list\",\n      children: [searchUsers.length !== 0 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: searchUsers.map(user => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `message_user ${isActive(user)}`,\n          onClick: () => handleAddUser(user),\n          children: /*#__PURE__*/_jsxDEV(UserCard, {\n            user: user\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 37\n          }, this)\n        }, user._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 33\n        }, this))\n      }, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: message.users.map(user => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `message_user ${isActive(user)}`,\n          onClick: () => handleAddUser(user),\n          children: /*#__PURE__*/_jsxDEV(UserCard, {\n            user: user,\n            msg: true,\n            children: user.online ? /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fas fa-circle text-success\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 47\n            }, this) : auth.user.following.find(item => item._id === user._id) && /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fas fa-circle\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 50\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 37\n          }, this)\n        }, user._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 33\n        }, this))\n      }, void 0, false), /*#__PURE__*/_jsxDEV(\"button\", {\n        ref: pageEnd,\n        style: {\n          opacity: 0\n        },\n        children: \"Load More\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 16\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(LeftSide, \"nXaU6rclc2654cH2HG+Jl5o7KIg=\", false, function () {\n  return [useSelector, useDispatch, useHistory, useParams];\n});\n\n_c = LeftSide;\nexport default LeftSide;\n\nvar _c;\n\n$RefreshReg$(_c, \"LeftSide\");","map":{"version":3,"sources":["F:/MERN-Stack-Build-a-social-media-app/client/src/components/message/LeftSide.js"],"names":["React","useState","useEffect","useRef","UserCard","useSelector","useDispatch","getDataAPI","GLOBALTYPES","useHistory","useParams","MESS_TYPES","getConversations","LeftSide","auth","message","online","state","dispatch","search","setSearch","searchUsers","setSearchUsers","history","id","pageEnd","page","setPage","handleSearch","e","preventDefault","res","token","data","users","err","type","ALERT","payload","error","response","msg","handleAddUser","user","ADD_USER","text","media","CHECK_ONLINE_OFFLINE","push","_id","isActive","firstLoad","observer","IntersectionObserver","entries","isIntersecting","p","threshold","observe","current","resultUsers","target","value","display","length","map","following","find","item","opacity"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,MAArC,QAAmD,OAAnD;AACA,OAAOC,QAAP,MAAqB,aAArB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,UAAT,QAA2B,uBAA3B;AACA,SAASC,WAAT,QAA4B,iCAA5B;AACA,SAASC,UAAT,EAAqBC,SAArB,QAAsC,kBAAtC;AACA,SAASC,UAAT,EAAqBC,gBAArB,QAA6C,mCAA7C;;AAGA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AACnB,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,OAAR;AAAiBC,IAAAA;AAAjB,MAA4BX,WAAW,CAACY,KAAK,IAAIA,KAAV,CAA7C;AACA,QAAMC,QAAQ,GAAGZ,WAAW,EAA5B;AAEA,QAAM,CAACa,MAAD,EAASC,SAAT,IAAsBnB,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACoB,WAAD,EAAcC,cAAd,IAAgCrB,QAAQ,CAAC,EAAD,CAA9C;AAEA,QAAMsB,OAAO,GAAGd,UAAU,EAA1B;AACA,QAAM;AAAEe,IAAAA;AAAF,MAASd,SAAS,EAAxB;AAEA,QAAMe,OAAO,GAAGtB,MAAM,EAAtB;AACA,QAAM,CAACuB,IAAD,EAAOC,OAAP,IAAkB1B,QAAQ,CAAC,CAAD,CAAhC;;AAGA,QAAM2B,YAAY,GAAG,MAAMC,CAAN,IAAW;AAC5BA,IAAAA,CAAC,CAACC,cAAF;AACA,QAAG,CAACX,MAAJ,EAAY,OAAOG,cAAc,CAAC,EAAD,CAArB;;AAEZ,QAAI;AACA,YAAMS,GAAG,GAAG,MAAMxB,UAAU,CAAE,mBAAkBY,MAAO,EAA3B,EAA8BL,IAAI,CAACkB,KAAnC,CAA5B;AACAV,MAAAA,cAAc,CAACS,GAAG,CAACE,IAAJ,CAASC,KAAV,CAAd;AACH,KAHD,CAGE,OAAOC,GAAP,EAAY;AACVjB,MAAAA,QAAQ,CAAC;AACLkB,QAAAA,IAAI,EAAE5B,WAAW,CAAC6B,KADb;AACoBC,QAAAA,OAAO,EAAE;AAACC,UAAAA,KAAK,EAAEJ,GAAG,CAACK,QAAJ,CAAaP,IAAb,CAAkBQ;AAA1B;AAD7B,OAAD,CAAR;AAGH;AACJ,GAZD;;AAcA,QAAMC,aAAa,GAAIC,IAAD,IAAU;AAC5BvB,IAAAA,SAAS,CAAC,EAAD,CAAT;AACAE,IAAAA,cAAc,CAAC,EAAD,CAAd;AACAJ,IAAAA,QAAQ,CAAC;AAACkB,MAAAA,IAAI,EAAEzB,UAAU,CAACiC,QAAlB;AAA4BN,MAAAA,OAAO,EAAE,EAAC,GAAGK,IAAJ;AAAUE,QAAAA,IAAI,EAAE,EAAhB;AAAoBC,QAAAA,KAAK,EAAE;AAA3B;AAArC,KAAD,CAAR;AACA5B,IAAAA,QAAQ,CAAC;AAACkB,MAAAA,IAAI,EAAEzB,UAAU,CAACoC,oBAAlB;AAAwCT,MAAAA,OAAO,EAAEtB;AAAjD,KAAD,CAAR;AACA,WAAOO,OAAO,CAACyB,IAAR,CAAc,YAAWL,IAAI,CAACM,GAAI,EAAlC,CAAP;AACH,GAND;;AAQA,QAAMC,QAAQ,GAAIP,IAAD,IAAU;AACvB,QAAGnB,EAAE,KAAKmB,IAAI,CAACM,GAAf,EAAoB,OAAO,QAAP;AACpB,WAAO,EAAP;AACH,GAHD;;AAKA/C,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAGa,OAAO,CAACoC,SAAX,EAAsB;AACtBjC,IAAAA,QAAQ,CAACN,gBAAgB,CAAC;AAACE,MAAAA;AAAD,KAAD,CAAjB,CAAR;AACH,GAHQ,EAGP,CAACI,QAAD,EAAWJ,IAAX,EAAiBC,OAAO,CAACoC,SAAzB,CAHO,CAAT,CAzCmB,CA8CnB;;AACAjD,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMkD,QAAQ,GAAG,IAAIC,oBAAJ,CAAyBC,OAAO,IAAI;AACjD,UAAGA,OAAO,CAAC,CAAD,CAAP,CAAWC,cAAd,EAA6B;AACzB5B,QAAAA,OAAO,CAAC6B,CAAC,IAAIA,CAAC,GAAG,CAAV,CAAP;AACH;AACJ,KAJgB,EAIf;AACEC,MAAAA,SAAS,EAAE;AADb,KAJe,CAAjB;AAQAL,IAAAA,QAAQ,CAACM,OAAT,CAAiBjC,OAAO,CAACkC,OAAzB;AACH,GAVQ,EAUP,CAAChC,OAAD,CAVO,CAAT;AAYAzB,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAGa,OAAO,CAAC6C,WAAR,IAAuB,CAAClC,IAAI,GAAG,CAAR,IAAa,CAApC,IAAyCA,IAAI,GAAG,CAAnD,EAAqD;AACjDR,MAAAA,QAAQ,CAACN,gBAAgB,CAAC;AAACE,QAAAA,IAAD;AAAOY,QAAAA;AAAP,OAAD,CAAjB,CAAR;AACH;AACJ,GAJQ,EAIP,CAACX,OAAO,CAAC6C,WAAT,EAAsBlC,IAAtB,EAA4BZ,IAA5B,EAAkCI,QAAlC,CAJO,CAAT,CA3DmB,CAkEnB;;AACAhB,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAGa,OAAO,CAACoC,SAAX,EAAsB;AAClBjC,MAAAA,QAAQ,CAAC;AAACkB,QAAAA,IAAI,EAAEzB,UAAU,CAACoC,oBAAlB;AAAwCT,QAAAA,OAAO,EAAEtB;AAAjD,OAAD,CAAR;AACH;AACJ,GAJQ,EAIP,CAACA,MAAD,EAASD,OAAO,CAACoC,SAAjB,EAA4BjC,QAA5B,CAJO,CAAT;AAMA,sBACI;AAAA,4BACI;AAAM,MAAA,SAAS,EAAC,gBAAhB;AAAiC,MAAA,QAAQ,EAAEU,YAA3C;AAAA,8BACI;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,KAAK,EAAET,MAA1B;AACA,QAAA,WAAW,EAAC,oBADZ;AAEA,QAAA,QAAQ,EAAEU,CAAC,IAAIT,SAAS,CAACS,CAAC,CAACgC,MAAF,CAASC,KAAV;AAFxB;AAAA;AAAA;AAAA;AAAA,cADJ,eAKI;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,KAAK,EAAE;AAACC,UAAAA,OAAO,EAAE;AAAV,SAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eASI;AAAK,MAAA,SAAS,EAAC,mBAAf;AAAA,iBAEQ1C,WAAW,CAAC2C,MAAZ,KAAuB,CAAvB,gBACG;AAAA,kBAEK3C,WAAW,CAAC4C,GAAZ,CAAgBtB,IAAI,iBAChB;AAAoB,UAAA,SAAS,EAAG,gBAAeO,QAAQ,CAACP,IAAD,CAAO,EAA9D;AACA,UAAA,OAAO,EAAE,MAAMD,aAAa,CAACC,IAAD,CAD5B;AAAA,iCAEI,QAAC,QAAD;AAAU,YAAA,IAAI,EAAEA;AAAhB;AAAA;AAAA;AAAA;AAAA;AAFJ,WAAUA,IAAI,CAACM,GAAf;AAAA;AAAA;AAAA;AAAA,gBADJ;AAFL,uBADH,gBAYE;AAAA,kBAEMlC,OAAO,CAACmB,KAAR,CAAc+B,GAAd,CAAkBtB,IAAI,iBAClB;AAAoB,UAAA,SAAS,EAAG,gBAAeO,QAAQ,CAACP,IAAD,CAAO,EAA9D;AACA,UAAA,OAAO,EAAE,MAAMD,aAAa,CAACC,IAAD,CAD5B;AAAA,iCAEI,QAAC,QAAD;AAAU,YAAA,IAAI,EAAEA,IAAhB;AAAsB,YAAA,GAAG,EAAE,IAA3B;AAAA,sBAEQA,IAAI,CAAC3B,MAAL,gBACE;AAAG,cAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,oBADF,GAEEF,IAAI,CAAC6B,IAAL,CAAUuB,SAAV,CAAoBC,IAApB,CAAyBC,IAAI,IAC3BA,IAAI,CAACnB,GAAL,KAAaN,IAAI,CAACM,GADpB,kBAEG;AAAG,cAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA;AANb;AAAA;AAAA;AAAA;AAAA;AAFJ,WAAUN,IAAI,CAACM,GAAf;AAAA;AAAA;AAAA;AAAA,gBADJ;AAFN,uBAdV,eAoCG;AAAQ,QAAA,GAAG,EAAExB,OAAb;AAAsB,QAAA,KAAK,EAAE;AAAC4C,UAAAA,OAAO,EAAE;AAAV,SAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cApCH;AAAA;AAAA;AAAA;AAAA;AAAA,YATJ;AAAA,kBADJ;AAkDH,CA3HD;;GAAMxD,Q;UACgCR,W,EACjBC,W,EAKDG,U,EACDC,S;;;KARbG,Q;AA6HN,eAAeA,QAAf","sourcesContent":["import React, { useState, useEffect, useRef } from 'react'\r\nimport UserCard from '../UserCard'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { getDataAPI } from '../../utils/fetchData'\r\nimport { GLOBALTYPES } from '../../redux/actions/globalTypes'\r\nimport { useHistory, useParams } from 'react-router-dom'\r\nimport { MESS_TYPES, getConversations } from '../../redux/actions/messageAction'\r\n\r\n\r\nconst LeftSide = () => {\r\n    const { auth, message, online } = useSelector(state => state)\r\n    const dispatch = useDispatch()\r\n\r\n    const [search, setSearch] = useState('')\r\n    const [searchUsers, setSearchUsers] = useState([])\r\n\r\n    const history = useHistory()\r\n    const { id } = useParams()\r\n\r\n    const pageEnd = useRef()\r\n    const [page, setPage] = useState(0)\r\n\r\n    \r\n    const handleSearch = async e => {\r\n        e.preventDefault()\r\n        if(!search) return setSearchUsers([]);\r\n\r\n        try {\r\n            const res = await getDataAPI(`search?username=${search}`, auth.token)\r\n            setSearchUsers(res.data.users)\r\n        } catch (err) {\r\n            dispatch({\r\n                type: GLOBALTYPES.ALERT, payload: {error: err.response.data.msg}\r\n            })\r\n        }\r\n    }\r\n\r\n    const handleAddUser = (user) => {\r\n        setSearch('')\r\n        setSearchUsers([])\r\n        dispatch({type: MESS_TYPES.ADD_USER, payload: {...user, text: '', media: []}})\r\n        dispatch({type: MESS_TYPES.CHECK_ONLINE_OFFLINE, payload: online})\r\n        return history.push(`/message/${user._id}`)\r\n    }\r\n\r\n    const isActive = (user) => {\r\n        if(id === user._id) return 'active';\r\n        return ''\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(message.firstLoad) return;\r\n        dispatch(getConversations({auth}))\r\n    },[dispatch, auth, message.firstLoad])\r\n\r\n    // Load More\r\n    useEffect(() => {\r\n        const observer = new IntersectionObserver(entries => {\r\n            if(entries[0].isIntersecting){\r\n                setPage(p => p + 1)\r\n            }\r\n        },{\r\n            threshold: 0.1\r\n        })\r\n\r\n        observer.observe(pageEnd.current)\r\n    },[setPage])\r\n\r\n    useEffect(() => {\r\n        if(message.resultUsers >= (page - 1) * 9 && page > 1){\r\n            dispatch(getConversations({auth, page}))\r\n        }\r\n    },[message.resultUsers, page, auth, dispatch])\r\n    \r\n\r\n    // Check User Online - Offline\r\n    useEffect(() => {\r\n        if(message.firstLoad) {\r\n            dispatch({type: MESS_TYPES.CHECK_ONLINE_OFFLINE, payload: online})\r\n        }\r\n    },[online, message.firstLoad, dispatch])\r\n\r\n    return (\r\n        <>\r\n            <form className=\"message_header\" onSubmit={handleSearch} >\r\n                <input type=\"text\" value={search}\r\n                placeholder=\"Enter to Search...\"\r\n                onChange={e => setSearch(e.target.value)} />\r\n\r\n                <button type=\"submit\" style={{display: 'none'}}>Search</button>\r\n            </form>\r\n\r\n            <div className=\"message_chat_list\">\r\n                {\r\n                    searchUsers.length !== 0\r\n                    ?  <>\r\n                        {\r\n                            searchUsers.map(user => (\r\n                                <div key={user._id} className={`message_user ${isActive(user)}`}\r\n                                onClick={() => handleAddUser(user)}>\r\n                                    <UserCard user={user} />\r\n                                </div>\r\n                            ))\r\n                        }\r\n                        \r\n                    </>\r\n                    : <>\r\n                        {\r\n                            message.users.map(user => (\r\n                                <div key={user._id} className={`message_user ${isActive(user)}`}\r\n                                onClick={() => handleAddUser(user)}>\r\n                                    <UserCard user={user} msg={true}>\r\n                                        {\r\n                                            user.online\r\n                                            ? <i className=\"fas fa-circle text-success\" />\r\n                                            : auth.user.following.find(item => \r\n                                                item._id === user._id\r\n                                            ) && <i className=\"fas fa-circle\" />\r\n                                                \r\n                                        }\r\n                                        \r\n                                    </UserCard>\r\n                                </div>\r\n                            ))\r\n                        }\r\n                    </>\r\n                }\r\n               \r\n               <button ref={pageEnd} style={{opacity: 0}} >Load More</button>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default LeftSide\r\n"]},"metadata":{},"sourceType":"module"}